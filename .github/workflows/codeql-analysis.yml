# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  push:
    branches: [ main ]
  pull_request:
    # The branches below must be a subset of the branches above
    branches: [ main ]
  schedule:
    - cron: '40 3 * * 3'

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'javascript' ]
        # CodeQL supports [ 'cpp', 'csharp', 'go', 'java', 'javascript', 'python', 'ruby' ]
        # Learn more about CodeQL language support at https://git.io/codeql-language-support

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        # queries: ./path/to/local/query, your-org/your-repo/queries@main

    # Autobuild attempts to build any compiled languages  (C/C++, C#, or Java).
    # If this step fails, then you should remove it and run the build manually (see below)
    - name: Autobuild
      uses: github/codeql-action/autobuild@v2

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö https://git.io/JvXDl

    # ‚úèÔ∏è If the Autobuild fails above, remove it and uncomment the following three lines
    #    and modify them (or add more) to build your code if your project
    #    uses a compiled language

    #- run: |
    #   make bootstrap
    #   make release

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
    - name: Electronegativity
  # You may pin to the exact commit or the version.
  # uses: doyensec/electronegativity-action@a8facd6408075fc604fa8850d508319526ae7cd1
  uses: doyensec/electronegativity-action@v1.1
  with:
    # --input argument. See https://github.com/doyensec/electronegativity/blob/master/README.md#cli
    input: # optional, default is .
    # NPM version of Electronegativity
    version: # optional, default is latest
    # --severity argument. See https://github.com/doyensec/electronegativity/blob/master/README.md#cli
    severity: # optional, default is 
    # --confidence argument. See https://github.com/doyensec/electronegativity/blob/master/README.md#cli
    confidence: # optional, default is 
    # --checks argument. See https://github.com/doyensec/electronegativity/blob/master/README.md#cli
    checks: # optional, default is 
    # --exclude-checks argument. See https://github.com/doyensec/electronegativity/blob/master/README.md#cli
    exclude-checks: # optional, default is 
    # --upgrade argument. See https://github.com/doyensec/electronegativity/blob/master/README.md#cli
    upgrade: # optional, default is 
    # --electron-version argument. See https://github.com/doyensec/electronegativity/blob/master/README.md#cli
    electron-version: # optional, default is 
    # --parser-plugins argument. See https://github.com/doyensec/electronegativity/blob/master/README.md#cli
    parser-plugins: # optional, default is 
    # If you're running into the "Fatal Error JavaScript heap out of memory", you can pass additional arguments to node like --max-old-space-size=4096
    node-args: # optional, default is 
